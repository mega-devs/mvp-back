version: '3'

services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: mailer
      MYSQL_ROOT_PASSWORD: 246808642aA@
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  web:
    build: ./backend
    command: daphne -b 0.0.0.0 -p 8000 config.asgi:application
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - log_volume:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
      - PYTHONUNBUFFERED=1
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=admin
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - PYTHONPATH=/app
      - DJANGO_STATIC_ROOT=/app/staticfiles

  celery_worker:
    build: ./backend
    command: celery -A config worker -l INFO
    volumes:
      - ./backend:/app
    depends_on:
      - web
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings

  celery_beat:
    build: ./backend
    command: celery -A config beat -l INFO
    volumes:
      - ./backend:/app
    depends_on:
      - web
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings

  prometheus:
    image: prom/prometheus:v2.45.0
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    restart: always

  grafana:
    image: grafana/grafana:10.0.3
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: always

volumes:
  mysql_data:
  static_volume:
  media_volume:
  log_volume:
  redis:
  prometheus_data:
  grafana_data: